// Generated by CoffeeScript 1.3.1
(function() {
  var color, data, force, height, testAdd, testRemove, width;

  data = null;

  width = 500;

  height = 300;

  color = d3.scale.category20();

  force = d3.layout.force().charge(-120).linkDistance(30).size([width, height]);

  $(function() {
    var svg;
    svg = d3.select("#graph").append("svg").attr("width", width).attr("height", height);
    return d3.json("data.json", function(json) {
      var link, node;
      data = json;
      force.nodes(json.nodes).links(json.links).start();
      link = svg.selectAll("line.link").data(json.links).enter().append("line").attr("class", "link").style("stroke-width", function(d) {
        return Math.sqrt(d.value);
      });
      node = svg.selectAll("circle.node").data(json.nodes).enter().append("circle").attr("class", "node").attr("r", 5).style("fill", function(d) {
        return color(d.group || 0);
      }).call(force.drag);
      node.append("title").text(function(d) {
        return d.name;
      });
      force.on("tick", function() {
        svg.selectAll("circle.node").attr("cx", function(d) {
          return d.x;
        }).attr("cy", function(d) {
          return d.y;
        });
        return link.attr("x1", function(d) {
          return d.source.x;
        }).attr("y1", function(d) {
          return d.source.y;
        }).attr("x2", function(d) {
          return d.target.x;
        }).attr("y2", function(d) {
          return d.target.y;
        });
      });
      window.node = node;
      return window.svg = svg;
    });
  });

  testAdd = function() {
    var index;
    index = data.nodes.push({
      name: 'TEST 1',
      group: 1
    });
    index--;
    data.links.push({
      source: index,
      target: 0,
      value: 1
    });
    svg.selectAll('circle.node').data(data.nodes).enter().append("circle").attr("class", "node").attr("r", 5).style("fill", function(d) {
      return color(d.group || 0);
    });
    return force.start();
  };

  testRemove = function() {
    data.nodes.pop();
    svg.selectAll('circle.node').data(data.nodes).exit().remove();
    return force.start();
  };

  window.testAdd = testAdd;

  window.testRemove = testRemove;

}).call(this);
