// Generated by CoffeeScript 1.3.1
(function() {
  var color, data, force, height, width;

  data = null;

  width = 500;

  height = 300;

  color = d3.scale.category20();

  force = d3.layout.force().charge(-120).linkDistance(30).size([width, height]);

  $(function() {
    var link, node, svg, testAdd, testRemove;
    svg = d3.select("#graph").append("svg").attr("width", width).attr("height", height);
    node = link = null;
    d3.json("data.json", function(json) {
      data = json;
      force.nodes(json.nodes).links(json.links).start();
      link = svg.selectAll("line.link").data(json.links);
      link.enter().append("line").attr("class", "link").style("stroke-width", function(d) {
        return Math.sqrt(d.value);
      });
      link.exit().remove();
      node = svg.selectAll("circle.node").data(json.nodes);
      node.enter().append("circle").attr("class", "node").attr("r", 5).style("fill", function(d) {
        return color(d.group || 0);
      }).call(force.drag);
      node.exit().remove();
      node.append("title").text(function(d) {
        return d.name;
      });
      return force.on("tick", function() {
        node.attr("cx", function(d) {
          return d.x;
        }).attr("cy", function(d) {
          return d.y;
        });
        return link.attr("x1", function(d) {
          return d.source.x;
        }).attr("y1", function(d) {
          return d.source.y;
        }).attr("x2", function(d) {
          return d.target.x;
        }).attr("y2", function(d) {
          return d.target.y;
        });
      });
    });
    testAdd = function() {
      var id, index, new_link, target, weight;
      id = Math.ceil(Math.random() * 100);
      index = data.nodes.push({
        name: "TEST " + id,
        group: 1
      });
      index--;
      target = Math.ceil(Math.random() * 100) % (data.nodes.length - 1);
      weight = Math.ceil(Math.random() * 100) % 5;
      new_link = {
        source: data.nodes[index],
        target: data.nodes[target],
        value: weight
      };
      data.links.push(new_link);
      svg.selectAll('circle.node').data(data.nodes).enter().append("circle").attr("class", "node").attr("r", 5).style("fill", function(d) {
        return color(d.group || 0);
      });
      svg.selectAll("line.link").data(data.links).enter().append("line").attr("class", "link").style("stroke-width", function(d) {
        return Math.sqrt(d.value);
      });
      force.start();
      return null;
    };
    testRemove = function() {
      var removed_index;
      data.nodes.pop();
      removed_index = data.nodes.length;
      data.links = data.links.filter(function(v) {
        return v.source.index !== removed_index && v.target.index !== removed_index;
      });
      svg.selectAll('circle.node').data(data.nodes);
      svg.selectAll('line.link').data(data.links);
      force.links(data.links);
      force.start();
      return null;
    };
    window.testAdd = testAdd;
    return window.testRemove = testRemove;
  });

}).call(this);
