(function() {
  var e;
  var __hasProp = Object.prototype.hasOwnProperty, __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  e = module.exports;

  e.Semaphore = (function() {

    Semaphore.prototype.blocks = null;

    Semaphore.prototype.val = null;

    function Semaphore(val) {
      this.val = val != null ? val : 0;
      this.blocks = [];
    }

    Semaphore.prototype.wait = function(block) {
      --this.val;
      this.blocks.push(block);
      if (this.val) return this.block();
    };

    Semaphore.prototype.block = function(next) {
      return this.blocks.shift()(next);
    };

    Semaphore.prototype.signal = function(next) {
      this.val++;
      return process.nextTick(this.block.bind(this, next));
    };

    return Semaphore;

  })();

  e.Mutex = (function() {

    __extends(Mutex, e.Semaphore);

    function Mutex() {
      Mutex.__super__.constructor.call(this, 1);
    }

    return Mutex;

  })();

}).call(this);
