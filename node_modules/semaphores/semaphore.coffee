e = module.exports

class e.Semaphore
	blocks: null
	val: null
																															  
	constructor: (@val = 0) ->
		@blocks = []
																																																														    
	wait: (block) ->
		@val--
		@blocks.push block
		if @val >= 0
			@block()
																																																														    
	block: (signal_callback) ->
		if @blocks.length
			@blocks.shift() signal_callback or ->
		else
			signal_callback?()
																																																														    
	signal: (next) ->
		@val++
		# async
		process.nextTick @block.bind @, next

class e.Mutex extends e.Semaphore
	constructor: ->
		super 1